package by.it.group151001.kononova;

import by.it.group151001.kononova.lesson01.FiboA;
import by.it.group151001.kononova.lesson01.FiboB;
import by.it.group151001.kononova.lesson01.FiboC;
import by.it.group151001.kononova.lesson02.A_VideoRegistrator;
import by.it.group151001.kononova.lesson02.B_Sheduler;
import by.it.group151001.kononova.lesson02.C_GreedyKnapsack;
import by.it.group151001.kononova.lesson03.A_Huffman;
import by.it.group151001.kononova.lesson03.B_Huffman;
import by.it.group151001.kononova.lesson03.C_HeapMax;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.math.BigInteger;
import java.util.List;

import static org.junit.Assert.assertTrue;

@SuppressWarnings("all")
public class Testkononova {
    /*
    для прохождения тестов создайте JUnit-конфигурацию на свой пакет:
    Поля:
    Name:               Test a_khmelev (тут ваша фамилия)
    Test kind:          All in package
    Package:            by.it.группа.a_khmelev (тут ваша фамилия)
    Search for test:    In whole project
    */

    @Test(timeout = 2000)
    public void slowA() throws Exception {
        FiboA fibo=new FiboA();
        BigInteger res=fibo.slowA(33);
        boolean ok=res.toString().equals("3524578");
        assertTrue("slowA failed", ok);

        res=fibo.slowA(38);
        ok=res.toString().equals("39088169");
        assertTrue("slowA failed", ok);
    }

    @Test
    public void calcA() throws Exception{
        boolean excep = false;
        FiboA fibo=new FiboA();
        try {
            fibo.calc(47);
        } catch (IndexOutOfBoundsException e) {
            excep = true;
        }
        assertTrue(excep);

        try {
            fibo.calc(-3);
        } catch (IndexOutOfBoundsException e) {
            excep = true;
        }
        assertTrue(excep);

        assertTrue("calcA 0", fibo.calc(0)==0);
        assertTrue("calcA 1", fibo.calc(2)==1);
        assertTrue("calcA N", fibo.calc(20)==6765);
        assertTrue("calcA N", fibo.calc(45)==1134903170);
    }


    @Test(timeout = 2000)
    public void fastB() throws Exception {
        FiboB fibo=new FiboB();
        BigInteger res=fibo.fastB(55555);
        boolean ok=res.toString().equals("909639027887347144342941161985282559355604430178183350584743748717027366542263454115774180457764119361178818065700599781605301031045912765958497937280143381078273858129564496371971635030388750211987018878594019122081608369859944055268290173661554656988657518473325524758272795937728604044464542075109647906732003650134988406067095491300374765088995480882968323512392912312617101227083974431097843457164074034436313773650841482061774891287543184545319371770727639363930224382008732215830209082100766659544448480462507899357524202479150382770774225865911940587951107025348123733528069313663520384501512487053755021582416432850008389098306703752469001379572433690896114640467636745086253877163269201080071042494668988577461564455432769254924713162146595798906578795216402666025860799868329860419563359713651103025221898184983333267778823082367482711242103128392639556863537102898301584759995002143070624597894698442040541110354780977822565822171878905836685636670318316609386609202981350416675502168926283222103319258798073524908331967335663739592708768575160693887587735383269058895502334974804209475257196644182183401092327147491379059823962903951993250290841961188457640918400772385828052455203308446497850522876608528180685531168473225828714565131444729283223699444503340482790428257563981286491892991033660246616024417941332506656689310748059549811484339433261117033259300500652902600115830724750452473301964550639144809470925781705205968970158308389657887649940883753804405196006995646957204750059695355436194123493457393941168645210746811798866778101896550299432514806643837980851710824081612727110722903372833776910411007619235864817126801702604065158334293916156858599848629086275942621396162424197955746781438271034399002200063411918796452136003564078905058991463355510592166377559715763614721727528762174985396734474738268089578234506515167275375031138709799221183193411830728781110315375410911538679192274012094572237862077799468940063396469472599562545280819613024692324290422417839590915081207851260450836509701986374443916520141544165383083153839035877261659612382394632908007237421298532631111604945472400580867112299736836453942883040919301426094366040263165816911324753683371254510146219312091798708493014082923046997229461410584400431963646196252695714577178308225591412910064716932858200159965282243561088622912391823483428553478212367172161995145427807648571543023538682011236247367500274357118969986946537681049847626833132626372331564775657970641545523598392909167955481457119817830082623455816062894209540469687455385575569476674039940711008474204307994961300581065435298861539733935163376567922721517142143870693595730772685170607264169021390358395399881188502427638248182477340230104522058037488718549609599732273262380107970103277852454079585014822446529907617554793888590318212831222877218400569978891912384375052727128718524934694661093439843049535858173127778867554834009090803582310094817387989046072275124327174453547387528618636253514292557730838237832283956847317251403978580909937787351429711078779176486954188835695627800987961493008146727150524700479682194654092491230343705472375989711563194519597413676122218700696331903370014042611855683236265661719277254818697403919130430082970613330085512630581993711275159086521623909671751050921361703343681699299208222210483191228642778043551720776161308201536353678451006349284573330815487139659744321673584559584535627067439581010081475569270508585650460599634412977833754040474620298291660929317207989213615847996337996513194412889319901026696279249614618048263112515523015028139115642407637494547067374364469154787640932535093313030524973284071847837684736975960823366826524971915596117141751173539262729086663116346365870365304961139616265531459119026052533301468820910319585978974579222551497319612280250272156600439579462572938175236818419213102577039797603964012311447121482962605776496764124907797045802761239464920829449200700588088226581890821754119528698448992492281777980743978405757962977498730099652422271747491916518058732412727393295412382217561015709276476265222622439458716140712781458897230945546868329928230421054584160200580399770646730181726541248601424838093255137542059863632032681191155464626810329003052450414902087133451713656344971266301306286598384154530437443195904584793667201486293909822730384866567403589855617148472976331377475537071340992696406582003033494858455633469855189854940169584255295881044283926177924571700029807536243414753698785712283199281467324771044558885623524634519934706960773040035641679891564766888028735640301056231364309188747975235305086820099619101194834477655410300908530799568056341467135959865163012148879799637372073120238334002164083141825552383359986157349055506671454613969971250993197318896380371736044700678686839058532742550672100148762502462567690393928229862990414662283465195719969681192925317147860433332662900777435695885742702980153579468077090503778385793045257952950939571400815755338835778252681311651211593423223271033820090662697446363417460923662250393808376533067948734141461696784826857742355326481531786608713950657208084344938550518227245946447950939511777299612416771729542414142576982603181588548594463903119620377875737240585329354450191149476257004704220396218896372972566563146603173395844213465455964339975758771738916022135628159697749562375309032256886577396168475827194326636777935421248710464612589191850097913011941826600916151746153573160932425356307913018103818572231771494548545466579668290240407141870360876562951856602444500777026852071846553257362419622464288697450580933026516503035014339009765843791821196411312165393747945504793993299751422908151987854767765817269975642144761884958625379183412350880981868626565168326052339532680197197858200204765140560748809378804767059034896306912874114267381150013577312431115293222274051955700161995353499107308739432654491665121139862651022220977402790694292313265157926210586554304669753789549742695475816403068323026643883659608102895106663954928507274638709413715276973722234800924968628551339593194656950666233178329230171300171790896760977977600703054490908033779919061417430767972754011226620011447787770040516989025818170004928836489506904080580895410790729678817790554829402807415722829064048804325214048768867868973205447913321185017203366768134124893876478106169409068166845256345603614755952200995450506503253096322589741111272573860520318560975126951189832398691354790155624215487306220430798632050226044082813297278674533852360615715272471146505997831814294373508289575689863926936157018562847403666957893046474794231832245767915764950463063819418934599036046132748550708580576092027307732454889200961677384186109536709266079853985476523531346415464941229194954505563092687327971602994597871986901655705546866430975791120173653270445491788176467125447014593030142811426624156667284237606937924697282519593068350824281461162360460317917445333603270404304171598255866616988625308545480547154998052222643657711174682277414701792789234550398444243563783350442559055541908269576447978400898556078854184975313420863644992336418260123115661138641838759121980922980182746613943486465087534850232586744133841747636710046314846745831670994098779580524422809535845883196541125925818027934524935795767942477297350167199511158722375729298143275562777989210939237729459500581200151961622610294719193912857664983695747089418077848341842747479353605964240934175117419680043821686563473525770356986897633945931996114027441293993666079903771862622785438928626113923911063936627869681173024996982573602392657779169262900509896269475824282258512914113759956518014684249546781380028633024426568315690423091176078448062494938618353795856287157761500396653963545510376826468285937461198717614785486284331624856379761950342941444039902439629145470393835639847926115014167679471960937462655579715056840092791540700933617938096273282334596764346928341223024309869218051536398537753802101110929837955769236103813869055495099703262883409012041761848724021333195454659951646980359421677064210706863660168861016236559537365045396235129819997695240203563639949785452598555874284145741040777257331880614743732438162252284147764148035005741554344546279394472438931324820288026274519808242693869080414444386675028918373153401490768380843351848427113619478744126210371863122440093613655447577113249000267942356307385248399435895311440865406541769774462963106844269995751111165312365889148985270030844877174359429336511675454861607078483687194200066090642719223093576427110150588110262193847157421102306411197089273574347086542400800528633585357786827095878525421498709518886724470954005978197906964718477002198987643283664577833752291238017460379354661683518044119258658196403688119863911001969457493498416088591539522805271419678746763581838734245715754721462086955985058439722368277588862050210922965588458008390805204826682386085423655836350934031315253436248696684634375070218291996645101785894679972053232999268463391792491397202598698532549209306038407089389170814042190047516687465343718894057618663112796109731136276137806006584813314845139426531979308355804915578565990413773376631453799855137038090741773508055133822860525243513283527061589059172286453679441998352714513650394795295105354986943863982582202530167265532500296148726539153598148766840870641239364617379750315388889503569004926351420656298789603645728951021324352143042614674039251422115798697547713631123807698993164925645374669805460077809276103954476896034509625394385947204050185217855524099622360537052794654126314130181596293144127267509390351018246614606419621608169991253167324318111584118384187873077324332235101472978837059697059900874239444989224012834638657187726461799190254373145224070507453490923444230916867959017257447376941662132028194306992196255147173779906789871155483492726999503177894814033511619479083908698457989598370495012644118329516819853330226633565412918634998283088126395380398793476716953835254592257031565790616613525000495203746662094756817245475391242659231997308097443779983219354573130426611778478692593591583617546914799296804525789713206912214531267052339211190112282721627175290941677106804596492543428294900573560468271465025689687105084668468189619639767716888486300937738962512530217833483251969414978948838418010674059964119031192844349921473189890333562644298871733567268178369507713139770414787297439886671772253317004726358040061068277570898528015355478563278532031290793232443681316564577939942167329056757668531416126638187915973262788310855346242953743907089052889700419942324397362425606941409727506690635964020154837089838696081484461121904400568295520716383595963400635719347742258457380004078279995058218236192428143853631277927475108860128155160872714269943851277340373266639438556500597050794352027301766865935883146777193359759064506577499692945142961399847185363846035489411916728005190125133620051680304062592494005371056113711295667563242745476125963220775394209187567930808056120453037041093082967574251679712066113534102230967327013521657561065451643719451653530724205229681371200152912780481428209508316270189500076121582841081399695808147375164707080761193903187755870846758109462933355019372529492513155055378096677369110652175673711075578590299120574710961154283757840850882013305753689311953733654090859881700093223315641073455810767834119285376879100652544381617590818383118661851414962612809756947753199125171502545556831799322789170241148215338109963325425668997935546328658765991089842850466571454347611327119513293519489362335958179174105025034828099588669105077499597365168880387075676110356654357331280261235167283832661443727354497944795910894953884419939619445");
        assertTrue("fastB failed", ok);

        res=fibo.fastB(44444);
        ok=res.toString().equals("");
        assertTrue("fastB failed", ok);

        res=fibo.fastB(33333);
        ok=res.toString().equals("684742762135832566411806052415872941470063084853672826707979657473841827486198086145033791728390043142807781326505003434313183538259909634539023379342249683405842040809043068340708290432979672687849147450277060513576204179205743443537835724664326292103290357456895201198550068108604931708758303181448088346872407823684549397261750844280402478633909981239720038214553985305456653848984665925159253994892660785137964365506361469671373475544894035664661270329489084840939262237422207194509782711877093233953645510927832537150966319371657188816841314886858060873780468303530034866101861614631474085900807414429366716833553066597320987045400599297561306386222727945950144074495531340345068106754710615687789756529413063464751691027881006709347353752189760671610607302021193799825483000837971844619026451780428358040222640651745015666973888655763908201987430696241851702313024324535377737025540611003945965882003104571108551992935238822037017287617780611277900245411009360006820186726064529360764787807734330368578301143912117957305150541015235858293143787339864518666094477312805528283716549299361869396230543228791789931938917419414979430641655801121808738073937231289698168510135791561920955371166934657679470898229468535310425250996511902060248078387195727383890991489239200773645083421263542799413727236849554836812342794736875862603709635813098270271130478183849478950303171623546531175808321460427837380327173520044931885975112990743919997627728239740669236741077793047752830292787848122463822641427626290436793126736638419750576888575498368946588236684048881323539643733004772228357504883753829272917868271567266691316267774906115929508279045072562903892483477996514681427868608441912564029670334682553473755578546372133491084421417196951554456370496633970346660256652069654928158500956063228120176401608023929796040710850268272301965704589404929201526328244069730016544168378870118259333954483106704631208478484934007903161250601684602438580717725742436334155706479502855006244795056373893277529659508286429424021877005460253317273174405945722040839867370179881533323468283999947397714348910414704256850036497393308466676723654689750692310548686783650837999641711157399141881790188215965376939140877151095286501094368122087217862479034810353991031875820164514627588476565618576883426178954233862568403815351809161065381257854504447764235187930906053476006946806458908707898507783689181509156151927067136876660817933860806730607206454196719499108538262345437227700891085186630576235410161681238782721778584474843034243744075933199098765007651169419916983714535508858851428689657131743226237786320496793755590800834657006355833095502900330826461679540187229473072060853232003826921538691250842589084113105069387028701207536498089773136083770508424376903893753680518876336941549429372919819158487160130468700570550791444717023156229052519193111463460223709793277830393434698560088132949151449631005488677185103067270337902349112504144363517955239713725419180064062219256708836716712681846256496413047396231926475350412429273803769374921204842834805162146299121171540407640562151236433234875250593021601087820758881690522045019703655400975265269247822238513475096047403414491375849128995793045111534911230322425387238212574095076625208301856691314992424665043221187719515368660977054249071163466315984345529987595723982627474582763145762514178320614012901717055728680631401968541932334621791590456920324699250099435474350599676962867892425771367004815829187627433270944596114969335277526712376700635669878201447610871833677202320674546847402856847399220002965747456895207043136375058826737540936862720370732883935313725560577622411496054393551167558557738975444689598043621562909757467832809761989484908870573685918614011949016179986682655593675318224643176112987937802490126889545426847010157840779575225291716809248020226287721393278269126145760730613921092095199096937473537051426922381771508423325626042335391095234648788138574411297232280273546429522734324362490433696288297544132189053082048596154696810780210258110422363495906026993746255835559042519513194161645349226003918015874903025200791124227605984798277789552264236852059176919674071741102560600089832934147287454200000440288825269793092289801498414665356321675769836457755532288643866043207344526135646503005260337855869366146888203707524447227908235485492553865272118381776484064933317051647955863613067738912927411654341985381400097294988674041454022212483005933255701952416430303234195558675039623529044487653316753027678775935149247712475814749836224967745174806536818459963923470286827920629805724208255203953716547149942485230674343935143544694909993096008267410302110137154234912247720837320695227221021350200912277917287275650587177289739066886452428775449282040046535320083147488872499021541404364946800629185671911692396184755615069975738865454493154130074064004706184368142589367775220204419303568654286829062603252255050304320556988584702055402977330330810000877770140628474808484641396937467962873550450476802195617471809764066561315393276749546150607098768944543860144615273892222051799683004038690688460105436313853209600901842020262576208953591885721547427862981298456485622389251550728596672011987152098783042396914534413826827541081296944283451937658772416058843711840531718836353909905797534613155348546210908485656388827150084689735542636602694914126837710426453597456419612942069192259144373795560451803656705179555630599355786648198743523774702247569329849455940588601273125725540923091748530113555078199914000151053260532020391302592307567849100125052305814419217759787811171694870421776300221504472499705744188351318351932650948425134481085748454046326212469585309864044716217756849900961390623147668301572835148130290066047400232362036002131462922992067484583326234115862422678135001615565202783836472062997565582291474710348821712185242499553548962502482065064706100870974530673442591728532353267513064777542109480605841330519360309493515438954827201176673049314088826701428960455095163119746670379841644897661812343868972130916869897172491892870826760943488239595027064091532799754877651495963484174505032259133488135231447220799816272037407156633210012808964112365972687754834171725984796501720606795094049464287055995510090343363384150514580209949621621857760813086332212122813640671517843198155863669088661478978976445073133408813858393574702026176588390063408383183643469374101861886412503887517307396152987218420305195637647661428599936744740546339607867748648321854689825220790943312798907577372332913805119423648213536872984545684452595721780281954095030337731080970021905238791725742348860865127632508382093853635987180522726191698369925912447092128159097725360474483154548932463450334441338698466495727144603059291444376383876279565545303354334222465347526854095917481111742893508195426263440977606723347428752899259552574792703556800774470122760800176499970438449873649299192609444369496049195166004267529689935087063552937066605389889344553046463876160380145213378");
        assertTrue("fastB failed", ok);

        res=fibo.fastB(22222);
        ok=res.toString().equals("594096006213628936596891858658745886308756685180897555216920512659451406802375095100459943049234524278594576523754196815383283089713002785829511008035081845454002861648415622464028464361409646307846279454628450731891867475423134932410298208350740385958243267551813374826970751807763820949208562983172268131215036142154881035673568566660020013036219024842612022172777143123154092820030624549689530602216465132721927441497603445976490829949462009834134823547385544311530672981408488800846645388492415551506590087831060530086104161471143452495186586940731901809812712394961342506238997911945570780275451775248182384702753563403323141629362308781653101558408865605623393074170208363558299948067325754290101140427272411211788306914763735318927573556262013985688111732037914225592661613298128464852250623587439038296573536626711693348563998065405833040859989101635112221170166346051446249400318782635714431629308501855673647598038197781159513687604252981593234450864951245079017926873044857874222241155589271986253609045491347921573698146010887318988318870609372481016670624663796708713864272898921732777041606455211606151986879562979519556355148123293289381409804555873005056005910584177809812230122244157850870056978975155705846855375513620084385381573037411129591341522343753747402808883111481596146203008624517026755330361891783526167806480467163806566235477895645509508558403724839262370876309218200163349887753155131293390517884020009071636606495160866223172684662532098024469041490949932730272559064736755559967831658188938049008576676474567674951733219700906563643830833457012729707557526408714296273963653664737726940543300951286926016845079829566285743646938679787018511006109887563200309279935094963331183701653099488572933161323222554694458833327516660128308637108715010830546722801385146609239750889507816659508056233443770579563597527569733811300283251681925003925926540739917355894283473132197438388214666721717283052625837805342984460383932841473445290787323927801085045904108763701182237524394918344508743393998070939869822835468239695530320652794155668962714899735578072433248861669964278067223910507585267193619190290557075568301697487630255128353155966380907286756106690975989044412231876519618051358141112128696218669701925535779408963351375592921470266398480499570743724388425877841770801851280105932193433185811310348869527936487073492566038552088283529092067997633456464280676432400596697319721149861469206838034488064806059207637340071868761884853900512120783668604547902367158440666422208025582597983781275989543098160801631392837186854103155087228024277484194731540439832854302557150196609636855310750709137680746076172238220694968054936865890951195280278674785191870841327364891013640345557745337194235140534743371008710396702984401730753818068168372485203853120180015296953263047762163830604171686889135531487866619339007695350845328965444866669329861761107572632178796580725997635966929100904920123947571701704197363101974693388663476569090003337783061478624014831464413357900915491959232988567764516037076532191917386352523437426644502249699240614967194953386428104267083367661421848026145033704377561897906436670624741907932694846027658056278561065493303362898007663478987582392472056353497948104930275894010664899547029342692754467640365275178575240587109187326222627124005365783152027156110764852120100962710882355313321568501417813123916209653006952928176327905973608787418667151499104395193592715251658955921911367063263980026407674901157550073090323910805289067553235939595688261083411519441890419452578177767530284790260891120313649503169791806275070554993011141447057373029093567748139666621746449221557799599216761576376175919495366064830878696814168631197947369897531225005703649661176548996318476599842069974614679085573074189633625040776964124097808619734741642553240960573117970934488056993785294349157257420646237257737816847075215656609586552697922587187007829728480208277931413475415126663041659776781746715289094388366539458649233452241308507129077878889155540688144437894395562776623213531984542678473222318170467669651204626064339288260680871482540481809224150614450783492784476766350095633787425802863101239816599469801582413615120909378826982948938352789199052351569958077351769580548236348001696738039530423596209032393401278935719738075039325851257001970496859556634237095117678631834156536730402907608683170875476288504582153178045434455347104069747088847930826256853653102044394526701073605152656083949454531342860074897240729177320785400721530468597885288416971088579463200927430951029742211566812898110716566610536658940715549410597113244288848511158523433832556490767548574946506838212273311");
        assertTrue("fastB failed", ok);

        res=fibo.fastB(11111);
        ok=res.toString().equals("515449135231559341621591189426925989418721609167804403107087312453694294479381404009230187092526675635022414542794904158934368158350216751867828729213516067642461147232232268304004580596220514978296704097915617589481297010691749471374967376304898014174716132125169572206688299944881902864940487579850754037243411123276226268998274067232370656873037885028569262362061989878439356579125363739644638605976667733232134130196207453194213358616463005487086631652051025004934485196108344869244852506414543015664379038338857611347469102943415360234480491921571800239803284078147859161629100936007246749423449323827401152142684138017539299637210829955409666781554035555164800825902557894478979141680264821730580654526990976167873657740460977594388216677737796493623940501749951993194553070912364327001564086186444836587037180810655016948562608480145057901528396467327800369394725748856906177005886944277609832795419082424474419033931754123200248752600310587761729439189440527073799320938597514569967706344559861576816209214912702962065352672071494639021231263782338510241176219316180788341549329905272081790433223099472061887224254193326845457247107409050092252994931668934553671721376871177693036352993174131508107261653495025271505086039171034392185521383307925723081097129536244468148375789733582131797176285225457221029865658845503179175504307577930140222583997281098099332145783930418777810346276337273420733754768191403158839413163368990092771464626510432292314209966950363068432367028332284209840897425718364670733733609565321893240873729315360915814803137552560521106490937691421540344502423323064743545226360364012549367167257038202145921861042955299329942301124074181956428710271876930526019606797077558959445434943166179407403375284366340173639269807373108055388080201746447050804598946499248800891171987624229020766742994219485280547337990630263452898332213470171667603200991268579583095661682595442200149483262133621860660302141160974707437100532341443580636798210704649175613121627855118061762876137389590812891131603206815601843823369210865672605256743142632199819790960079549275267815983406188538500072911327187912330503064073869613282412315795790671452556371408354045852898125070873750632615799469070245720036053071341314252092446074260578417947762296896685389368685659291620443322232933074723685001342680075497489");
        assertTrue("fastB failed", ok);

        res=fibo.fastB(0);
        ok=res.toString().equals("0");
        assertTrue("fastB failed", ok);
    }


    @Test(timeout = 2000)
    public void fasterC() throws Exception {
        FiboC fibo=new FiboC();
        assertTrue("fasterC failed 1", fibo.fasterC(10,2)==1L);
        assertTrue("fasterC failed 2", fibo.fasterC(1,2)==1L);
        assertTrue("fasterC failed 3", fibo.fasterC(999999999,321)==34L);
        assertTrue("fasterC failed 4", fibo.fasterC(67,342)==5L);
        assertTrue("fasterC failed 5", fibo.fasterC(100,100)==75L);
        assertTrue("fasterC failed 6", fibo.fasterC(50,4)==1L);
        assertTrue("fasterC failed 7", fibo.fasterC(0,4)==0L);
    }

    @Test
    public void A_VideoRegistrator() {
        A_VideoRegistrator instance=new A_VideoRegistrator();
        double[] events=new double[]{1, 1.1, 1.6, 2.2, 2.4, 2.7, 3.9, 8.1, 9.1, 5.5, 3.7};
        List<Double> starts=instance.calcStartTimes(events,1); //рассчитаем моменты старта, с длинной сеанса 1
        boolean ok=starts.toString().equals("[1.0, 2.2, 3.7, 5.5, 8.1]");
        assertTrue("slowA failed", ok);

        events=new double[]{1, 1.2, 1.3, 1.6, 2.4, 4.5, 2.7, 3.1, 3.8, 4.1, 5.1, 4.9, 5.9, 5.0};
        starts=instance.calcStartTimes(events,0.5);
        ok=starts.toString().equals("[1.0, 1.6, 2.4, 3.1, 3.8, 4.5, 5.1, 5.9]");
        assertTrue("slowA failed", ok);

        events=new double[]{1.3, 1.0, 3.5, 10.1, 11.1, 2.0, 3.0, 4.1, 5.3, 5.7};
        starts=instance.calcStartTimes(events,1.1);
        ok=starts.toString().equals("[1.0, 3.0, 5.3, 10.1]");
        assertTrue("slowA failed", ok);
    }

    @Test
    public void B_Sheduler() {
        B_Sheduler instance = new B_Sheduler();
        B_Sheduler.Event[] events = {new B_Sheduler.Event(0, 3), new B_Sheduler.Event(0, 1), new B_Sheduler.Event(1, 2), new B_Sheduler.Event(3, 5),
                new B_Sheduler.Event(1, 3), new B_Sheduler.Event(1, 3), new B_Sheduler.Event(1, 3), new B_Sheduler.Event(3, 6),
                new B_Sheduler.Event(2, 7), new B_Sheduler.Event(2, 3), new B_Sheduler.Event(2, 7), new B_Sheduler.Event(7, 9),
                new B_Sheduler.Event(3, 5), new B_Sheduler.Event(2, 4), new B_Sheduler.Event(2, 3), new B_Sheduler.Event(3, 7),
                new B_Sheduler.Event(4, 5), new B_Sheduler.Event(6, 7), new B_Sheduler.Event(6, 9), new B_Sheduler.Event(7, 9),
                new B_Sheduler.Event(8, 9), new B_Sheduler.Event(4, 6), new B_Sheduler.Event(8, 10), new B_Sheduler.Event(7, 10)
        };

        List<B_Sheduler.Event> starts = instance.calcStartTimes(events, 0, 10);  //рассчитаем оптимальное заполнение аудитории
        boolean ok=starts.toString().equals("[(0:1), (1:2), (2:3), (3:5), (6:7), (7:9)]");
        assertTrue("B_Sheduler failed", ok);

        starts = instance.calcStartTimes(events, 5, 10);
        ok=starts.toString().equals("[(6:7), (7:9)]");
        assertTrue("B_Sheduler failed", ok);
        starts = instance.calcStartTimes(events, 1, 5);
        ok=starts.toString().equals("[(1:2), (2:3), (3:5)]");
        assertTrue("B_Sheduler failed", ok);
        starts = instance.calcStartTimes(events, 2, 2);
        ok=starts.toString().equals("[]");
        assertTrue("B_Sheduler failed", ok);
        events = new B_Sheduler.Event[] {new B_Sheduler.Event(0, 3), new B_Sheduler.Event(0, 1)};
        starts = instance.calcStartTimes(events, 4, 10);
        ok=starts.toString().equals("[]");
        assertTrue("B_Sheduler failed", ok);
    }
    @Test
    public void C_GreedyKnapsack() throws Exception {
        String root=System.getProperty("user.dir")+"/src/";
        File f=new File(root+"by/it/a_khmelev/lesson02/greedyKnapsack.txt");
        double costFinal=new C_GreedyKnapsack().calc(f);
        boolean ok=costFinal==200;
        assertTrue("B_Sheduler failed", ok);
    }

    @Test
    public void A() throws Exception {
        String root = System.getProperty("user.dir") + "/src/";
        File f = new File(root + "by/it/a_khmelev/lesson03/dataHuffman.txt");
        A_Huffman instance = new A_Huffman();
        String result = instance.encode(f);
        boolean ok=result.equals("01001100100111");
        assertTrue("A failed", ok);
    }

    @Test
    public void B() throws Exception {
        String root = System.getProperty("user.dir") + "/src/";
        File f = new File(root + "by/it/a_khmelev/lesson03/encodeHuffman.txt");
        B_Huffman instance = new B_Huffman();
        String result = instance.decode(f);
        boolean ok=result.equals("abacabad");
        assertTrue("B failed", ok);
    }
    @Test
    public void C() throws Exception {
        String root = System.getProperty("user.dir") + "/src/";
        InputStream stream = new FileInputStream(root + "by/it/a_khmelev/lesson03/heapData.txt");
        C_HeapMax instance = new C_HeapMax();
        Long res=instance.findMaxValue(stream);
        boolean ok=(res==500);
        assertTrue("C failed", ok);
    }

}
